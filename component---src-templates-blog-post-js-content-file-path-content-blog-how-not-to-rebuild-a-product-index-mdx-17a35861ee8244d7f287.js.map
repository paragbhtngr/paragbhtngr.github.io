{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-how-not-to-rebuild-a-product-index-mdx-17a35861ee8244d7f287.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/how-not-to-rebuild-a-product/index.mdx","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/container.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.em, null, \"Note: I am not naming this company because I do not wish to be harassed by the owners of the company, as they have done more for talking about less. I also think that the lessons learnt are widely applicable across various companies at myriad levels of incompetence and toxicity.\")), \"\\n\", React.createElement(_components.p, null, \"When I joined the company, I was told that there would be a lot of work to get done. Now I'm not one to shy away from work, and when I joined, I was looking to prove something to myself - that I could build something to completion. Before working here, I had built several proofs-of-concept, minimum viable products and hackathon projects, but nothing that I felt particularly proud of as a developer - nothing that stood as a testament to my abilities or what I felt was an accurate representation of what I could do. The coming four months were about to change that.\"), \"\\n\", React.createElement(_components.p, null, \"I feel like this would be a good time to mention what I was getting myself into. My task for the next few months would be to rebuild an existing platform - a platform with search capabilities, a marketplace, the ability to create shortlists, a recommendation engine, making bookings, requesting quotations, a messaging platform, integrate payments and authentication. And that was just on the end user side. I also had to build the admin dashboard and a super user dashboard. And I'm the only front-end developer on the team.\"), \"\\n\", React.createElement(_components.p, null, \"Any reasonable or experienced developer would have said no to this request out of hand. No way was this possible. And yet, here I was, filled with all the determination of someone with something to prove, and the naiveté of someone who hadn't yet proved anything. And so, I accepted the job and set forth.\"), \"\\n\", React.createElement(_components.p, null, \"Within a week, I was designing the tech-stack. I had barely understood what the business does at this point and I was already being asked to make design decisions (This, in retrospect, was mistake #1). I had been persuaded and not incorrectly that SEO was critical and hence had decided to use Next JS, a technology that I was not really familiar with and therefore was not able to implement properly (mistake #2). However, the rest of the tech stack I was pretty familiar with - React, Redux for the front-end and a Bootstrap framework to make designing easier.\"), \"\\n\", React.createElement(_components.p, null, \"If you're wondering why I didn't use the existing framework and decided to build from scratch, there's a good reason for that. The old site was a monolith of code encompassing front-end and back-end built in ASP.Net and was just incomprehensible with no documentation or consideration put into it. In retrospect, I may have been too harsh in judging it and in my estimation of what my own code would look like. It was naive, although I do believe that despite my naiveté, the current codebase is a lot cleaner and a lot easier to follow.\"), \"\\n\", React.createElement(_components.p, null, \"It was around a month into building the project that we started getting requests to redesign some of the pages in order to make them easier to use, prettier, responsive on mobile, etc. All necessary and reasonable requests in a normal timeframe. However, this increased the scope of the project without changing the deadlines. An already ridiculous project had just got more ridiculous and we went along with it (mistake #3).\"), \"\\n\", React.createElement(_components.p, null, \"A brief non-sequitur here to talk about the changes that we were supposed to be making. First of all, there were not supposed to be any changes to design or flow at all. V2 was supposed to be a rebuild to improve the tech stack, not the design. So from the perspective of the end user, they should have had no indication at all that we had just had a major system overhaul. However, in the somewhat paraphrased words of Ulysses S Grant, mistakes were made. There was no CTO, neither task board nor Jira, nor scrum or agile or any sense of project management whatsoever. And thus, there was no accountability or any way of keeping track of what the engineering team was doing, or a clear way of reporting it to rest of the team. So the product management side was completely botched. In addition to this, however, the designs were not tested to make sure that they were intuitive. They were pretty, they were responsive, but there was no user testing done until after the designs were pushed to live if they were actually a better user experience (mistake #4). I cannot emphasise how much of a no-no this is. As a result, we ended up changing the homepage and flow every week. On live. So put yourself in the shoes of a user. Every time you come back to the site, you see a different version. I cannot imagine something more disorienting for a user than that.\"), \"\\n\", React.createElement(_components.p, null, \"Anyway, cut to a couple of months into working on the project. Things are clearly being delayed but no one wants to change the deadline, because we are paying an offshore shop to maintain the live site. It's something that infuriates me still - imagine being on the Titanic and having the foresight to see that you're going to hit the iceberg and doing nothing to course correct because you don't want to use more fuel. Yes, it is that ludicrous. So instead, we keep building and building. By this point though, I think some glimmer of sense prevailed and they hired a remote front-end developer on contract. Great. That is somewhat helpful, since I don't have to build the entire thing myself. We start making some progress, but it's not quite enough. The other dev can only work a couple of hours a day, which is not a lot. So what do we do? We hire another developer (mistake #5).\"), \"\\n\", React.createElement(_components.p, null, \"As you can see by the fact that I've labeled it mistake #5, I do not agree with this decision. There are benefits to parallelisation, definitely, but there is a limit to how much you can parallelise things. Parallelising things is very rarely, if ever, less overall work. There is the overhead of introducing someone to a new project, making sure they understand what they're working on, ensuring that the code is of a certain quality and consistent with the style of the application, ensuring they're on track, and even with a decent programmer and a normal schedule that's a heavy workload. But now I not only had to finish all the work I had to finish, I also had to introduce a new programmer into the fray and get them to work on things. Some things can be parallelised. Others can't. For some reason managers think nine women can give birth to a baby in a month. Surprisingly, they quit within a week or two. Not that I blame them in the slightest.\"), \"\\n\", React.createElement(_components.p, null, \"Ultimately, we're down to a couple of weeks before launch, and this is when people start taking a look at the system and go, everything is wrong. We have to rebuild parts entirely, major overhauls of other parts and honestly, even 2 months after launch, we're still picking up the pieces of what we should've done right. But we got it done. It wasn't working 100% the day of the launch. We had major live bugs and page crashes for weeks after, and things still keep breaking. However, kicking and screaming and crying, v2 was born.\"), \"\\n\", React.createElement(_components.p, null, \"So how do you build a web platform in 4 months? The short answer is: don't. Seriously. Don't do it hoe. Here's what you should do:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Know what you're building before you're building it\"), \" - Make sure you know exactly how something is supposed to work, down to the copy, every error state, the flow. Know as much as you can about the product before building it. And I know this isn't always possible. Things change, and if they do that's okay. Just as long as everyone recognises that things have changed and will need to be rebuilt and will take longer as a result.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"In a time crunch, use the tools you know best\"), \" - This is of course assuming you know the tools. If not, you have to pick up things on the fly, which is fine - that's how you learn. However, a time crunch is not the best time for experimentation. This is one of the things I mostly did right and I'm glad I did. I did have to pick up things as I went along and that's part of learning. I just wish I had more time to really do it right.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Avoid scope creep like the plague\"), \" - So this is something where you need a product manager or a CTO on your side who can stand up for the engineering team. We didn't have anyone, unfortunately. I wish we had someone who would. As a relatively junior developer scared of getting fired and needing to prove to himself that he could actually build something for a change, I didn't put up much of a fight. I've learned my lesson the hard way. Developers really get treated like shit a lot of the time by people who don't understand tech. But as developers, we really do need to learn to stand up for ourselves.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Test designs before you build them\"), \" - Before, and after. Test, test, test. Do UI/UX tests, flow tests, QA tests, unit tests. The more tests you do, the less it's going to break when you put it out there. We put a completely untested site into live, which was a big mistake. Yes, it would have taken more time. But we could have avoided frustrating users with a broken product, and not had to rush out hotfixes to every issue and fixed them right.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"More people doesn't necessarily mean things move faster\"), \" - There is a fine line here, but beyond a certain point, having too many people just meant more conflicts, more management instead of development, more inconsistency in the codebase due to different styles, more explaining the product and more bugs. I think adding people once we had a chance to come up with a standardised process or from the beginning would have been the way to go.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Communicate, communicate, communicate\"), \" - This is something I wish I did not do enough of and I wish I had done more. Communicating early, communicating often and communicating in entirety. We might not have discovered things so late had we done a better job of getting everyone on the same page about what we were doing.\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/parag/Github/personal-website/my-blog-starter/content/blog/how-not-to-rebuild-a-product/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Container from \"../components/container\";\nconst shortcodes = {\n  Link\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx}, children, location}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"div\", {\n    className: \"w-full max-w-[42rem] m-auto\"\n  }, React.createElement(\"article\", {\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\",\n    className: \"text-sky-700\"\n  }, mdx.frontmatter.title), React.createElement(\"p\", null, React.createElement(\"span\", {\n    className: \"inline-block\"\n  }, mdx.frontmatter.date), mdx.frontmatter.categories ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"rounded inline-block bg-black w-1 h-1 mx-1 mb-0.5\"\n  }), React.createElement(\"span\", {\n    className: \"inline-block\"\n  }, mdx.frontmatter.categories.join([\", \"]))) : null)), React.createElement(MDXProvider, {\n    components: shortcodes,\n    localImages: mdx.frontmatter.embeddedImagesLocal\n  }, children), React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.frontmatter.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.frontmatter.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\"))))));\n};\nexport const Head = ({data: {mdx}}) => {\n  return React.createElement(Seo, {\n    title: mdx.frontmatter.title,\n    description: mdx.frontmatter.description || mdx.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        embeddedImagesLocal {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n        categories\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n  }\n`;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Container from \"./container\"\n\nconst Bio = ({ blueBg }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={blueBg ? `bg-sky-700` : \"\"}>\n      <Container>\n        <div className=\"bio p-10\">\n          {author?.name && (\n            <p className={`${blueBg ? \"text-white\" : \"text-black\"}`}>\n              Written by <strong>{author.name}</strong>{\" \"}\n              {author?.summary || null}\n              {` `}\n              <a\n                className={`${\n                  blueBg ? \"text-white\" : \"text-black\"\n                } underline underline-offset-4`}\n                href={`https://twitter.com/${social?.twitter || ``}`}\n              >\n                You should follow them on Twitter\n              </a>\n            </p>\n          )}\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\n\nfunction Container({ children }) {\n  return (\n    <div className=\"w-full max-w-[42rem] xl:max-w-[64rem] m-auto\">\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","ol","li","strong","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Link","BlogPostTemplate","_ref","_site$siteMetadata","data","previous","next","site","mdx","children","location","siteTitle","siteMetadata","title","Layout","className","itemScope","itemType","itemProp","frontmatter","date","categories","join","MDXProvider","localImages","embeddedImagesLocal","Bio","style","display","flexWrap","justifyContent","listStyle","padding","to","slug","rel","Head","_ref2","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_data$site$siteMetada","_data$site$siteMetada2","blueBg","useStaticQuery","author","social","Container","name","summary","href","twitter","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}