{"version":3,"file":"component---src-templates-portfolio-post-js-content-file-path-content-portfolio-mochi-the-corgi-index-mdx-8b9af1af7e085cc834c0.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/portfolio/mochi-the-corgi/index.mdx","webpack://gatsby-starter-blog/./src/templates/portfolio-post.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {getImage, GatsbyImage} from \"gatsby-plugin-image\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first post on my new fake blog! How exciting!\"), \"\\n\", React.createElement(_components.h2, null, \"Local Images\"), \"\\n\", React.createElement(\"div\", {\n    className: \"image-grid\"\n  }, React.createElement(GatsbyImage, {\n    alt: \"green doggo\",\n    image: getImage(props.data.mdx.frontmatter.embeddedImagesLocal[0]?.childImageSharp?.gatsbyImageData)\n  }), React.createElement(GatsbyImage, {\n    alt: \"orange doggo\",\n    image: getImage(props.data.mdx.frontmatter.embeddedImagesLocal[1]?.childImageSharp?.gatsbyImageData)\n  }), React.createElement(GatsbyImage, {\n    alt: \"orange doggo\",\n    image: getImage(props.data.mdx.frontmatter.embeddedImagesLocal[2]?.childImageSharp?.gatsbyImageData)\n  })), \"\\n\", React.createElement(_components.p, null, \"You can also write code blocks here!\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const saltyDuckEgg = \\\"chinese preserved food product\\\"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/parag/Github/personal-website/my-blog-starter/content/portfolio/mochi-the-corgi/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nconst shortcodes = {\n  Link\n};\nconst PortfolioPostTemplate = ({data: {previous, next, site, mdx}, children, location}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    itemScope: true,\n    itemType: \"http://schema.org/Article\",\n    className: \"px-4\"\n  }, React.createElement(\"div\", {\n    className: \"max-w-[42rem] px-4 m-auto\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, mdx.frontmatter.title), React.createElement(\"p\", null, mdx.frontmatter.date)), React.createElement(MDXProvider, {\n    components: shortcodes,\n    localImages: mdx.frontmatter.embeddedImagesLocal\n  }, children)), React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"\"\n  }, React.createElement(\"ul\", {\n    className: \"flex justify-between, list-none max-w-[42rem] m-auto px-4\"\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.frontmatter.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.frontmatter.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nexport const Head = ({data: {mdx}}) => {\n  return React.createElement(Seo, {\n    title: mdx.frontmatter.title,\n    description: mdx.frontmatter.description || mdx.excerpt\n  });\n};\nPortfolioPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PortfolioPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query PorfolioPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        embeddedImagesLocal {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n      body\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_props$data$mdx$front","_props$data$mdx$front2","_props$data$mdx$front3","_props$data$mdx$front4","_props$data$mdx$front5","_props$data$mdx$front6","_components","Object","assign","p","h2","pre","code","_provideComponents","components","React","className","GatsbyImage","alt","image","getImage","data","mdx","frontmatter","embeddedImagesLocal","childImageSharp","gatsbyImageData","wrapper","MDXLayout","shortcodes","Link","PortfolioPostTemplate","_ref","_site$siteMetadata","previous","next","site","children","location","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","date","MDXProvider","localImages","Bio","to","slug","rel","Head","_ref2","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}