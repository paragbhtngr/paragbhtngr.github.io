{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-what-most-people-nfts-index-mdx-0810fe0a849aaa855e3a.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/what-most-people-nfts/index.mdx","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/container.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\",\n    a: \"a\",\n    h5: \"h5\",\n    ol: \"ol\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Over the last few years, a small elite chunk of the world seems to have gone crazy about pictures of lions, cats and pixelated punks. NFTs (Non-Fungible Tokens) have made a splash in the crypto and tech community. A race is on to see who can build the metaverse first. But are NFTs here to stay, or are they a fad that’s going to be gone in a couple of years?\"), \"\\n\", React.createElement(_components.h4, null, \"WTF is an NFT?\"), \"\\n\", React.createElement(_components.p, null, \"Before we get too deep into it, let’s get this out of the way. A Non-Fungible Token is a record of ownership on the blockchain. It states that a particular account owns a product and records the history of that ownership. I am going to assume you are familiar with the blockchain. Or at least accept that a blockchain provides a decentralised way of verifying a record on a ledger as true. So, how did we get from there to lazy lions and bored apes?\"), \"\\n\", React.createElement(_components.p, null, \"At its crux, an NFT is not the picture or video of the artwork. Even the most basic internet user can right click and save a perfect copy of an image (much to the chagrin of the person who paid thousands for it). The NFT is the receipt of ownership of the image. So why is the world in a frenzy over receipts for JPEGs? After all, if you’ve ever tried to return a faulty item, you already know how much we care about our receipts. What then, is the point of owning it?\"), \"\\n\", React.createElement(_components.p, null, \"As of now, the value of owning most NFTs is to flex on others, plain and simple. At least, for those who are buying them to own them. The rest of the market is flippers and scalpers, looking to make more money by selling it to someone convinced they can get more for it. Humans are \", React.createElement(_components.a, {\n    href: \"https://www.notboring.co/p/status-monkeys\"\n  }, \"status-seeking monkeys\"), \" and NFTs are the newest path to social capital. So long as other people with status believe these things have status, they do.\"), \"\\n\", React.createElement(_components.h4, null, \"What (most) people don’t understand about NFTs\"), \"\\n\", React.createElement(_components.p, null, \"As with any new piece of technology, there is a lack of understanding about it amongst the public. Worse still, there is also a ton of misunderstanding about it. Or rather, problems that people parrot over and over without understanding their causes. These are the most common ones.\"), \"\\n\", React.createElement(_components.h5, null, \"NFTs are terrible for the environment:\"), \"\\n\", React.createElement(_components.p, null, \"There is some validity to this when discussing NFTs on the Ethereum blockchain. Yes, as long as Ethereum uses the energy intensive proof of work approach to verify transactions, any NFT traded will use up a lot of energy. But as with all technology, improvements will happen. In this case, some have happened already. Here are a couple:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ethereum is moving to a proof of stake form of verification. This will use a fraction of the energy of proof of work, making transactions a hell of a lot more energy efficient.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"There are plenty of sidechains built off of Ethereum. Sidechains, also known as layer 2 solutions, connect to the Ethereum network. Networks such as Polygon and Immutable X trade some security for much faster processing times and efficiency.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"There are other, more efficient blockchains right now. If you don't want to use Ethereum at all, you can use the Solana blockchain. Solana also supports NFTs, but with its own means of achieving energy-efficient transactions.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"So while this is a legitimate concern, with improvements in technology, it will not hold to be true.\"), \"\\n\", React.createElement(_components.h5, null, \"NFTs are a way to steal from artists:\"), \"\\n\", React.createElement(_components.p, null, \"Art theft happens when someone who does not own an artist's work sells it for money that does not go to the artist. This is bad, and it should not happen. But let's think about whether NFTs are enabling or exacerbating this in any way.\"), \"\\n\", React.createElement(_components.p, null, \"The truth is wherever there is an opportunity to make money, there will be crooks, scammers and conmen. The amount of dumb money in NFTs guarantees that there will be people who will buy anything on sale. These people believe every NFT, regardless of quality, will go up in the long run. Their greed makes them blind, and the scammers are happy to sell them fakes to make a quick buck.\"), \"\\n\", React.createElement(_components.p, null, \"The NFT market is one with a low barrier to entry, a lot of hype, and very little oversight, regulation. It is full of speculators looking for a quick profit. This is, in a lot of ways like the early days of internet commerce. This is a cause for concern if you are looking to buy an NFT right now. But there are also plenty of legitimate artists making honest art using this medium. If you would like to support an artist by buying their NFT, just be sure it's coming from the source. Check their profiles to make sure it's them. This will help you ensure the NFT is legitimate. If you're wondering whether it's worth buying though, read on.\"), \"\\n\", React.createElement(_components.h5, null, \"NFTs are classist and exclusionary:\"), \"\\n\", React.createElement(_components.p, null, \"Yes, this is a real thing I have heard as criticism of NFTs. Yes, they are and that is by design. The entire point of owning something exclusive is so that you have it and others don't. If you have a problem with this, your problem isn't NFTs. It's capitalism.\"), \"\\n\", React.createElement(_components.p, null, \"But yes, I’m not a huge fan of capitalism either.\"), \"\\n\", React.createElement(_components.h4, null, \"What companies don’t understand about NFTs\"), \"\\n\", React.createElement(_components.p, null, \"Whether you care for the art or not, what NFTs do is provide one thing and one thing only - proof of ownership. For everyone. Ubisoft recently announced that is was going to be making its own NFTs, called digits. Was anyone actually excited by this? Not if the 96% disapproval rating on their launch video was any indication. But this isn’t blind hate, the people have got a point. Ubisoft doesn’t need to be making NFTs. It already has enough ways to sell you digital assets within a game: with DLCs, expansion packs, skins, power-ups, in-game currency, and more. These were all achieved through a centralised server with no need to get into the NFT space. NFTs are unnecessary at best, and antithetical at worst, to a centralised company’s agenda. Any company that plans on controlling their digital assets with an iron fist has no need of NFTs.\"), \"\\n\", React.createElement(_components.p, null, \"Ubisoft may have understood the proof of ownership part. They missed out on the “for everyone” part. Ubisoft’s NFTs aren't compatible with Grand Theft Auto, for example. That's not how centralised companies work.\"), \"\\n\", React.createElement(_components.p, null, \"Proof of ownership isn’t enough. Sure, I may be able to buy a 3D model on an app, but what’s the point of putting that information on the blockchain? Would VeVe's success selling Marvel's digital collectibles been any different if they only said they were using NFTs, but never did? I still can’t technically do anything with the model outside of their platform.\"), \"\\n\", React.createElement(_components.h4, null, \"Where we go from here\"), \"\\n\", React.createElement(_components.h5, null, \"The Balkanisation of Media\"), \"\\n\", React.createElement(_components.p, null, \"The decentralised proof of ownership that this technology provides could go two ways. Douglas Rushkoff provides \", React.createElement(_components.a, {\n    href: \"https://onezero.medium.com/how-nfts-will-kill-netflix-62f9a3f03e87\"\n  }, \"one possible outcome\"), \", the Balkanisation of media. Right now, only a few monopolist platforms control where we get our media. To quote him from the article:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Most simply, an NFT unleashes a new potential for the internet to do two-way linking — where every instance of a file links back to its origin, the creator, who can be paid for the sale or use or reuse. A writer can issue a book as an NFT. A musician can release a song. And, potentially, even filmmakers can release whole movies and television shows that way, liberating themselves from the studio system, television channels, or streaming services.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Every creator becomes a studio, a publication, or a streaming service, a new universe of à la carte everything.\"), \"\\n\", React.createElement(_components.p, null, \"The problem with this approach, as he points out, is the lack of curation. The Balkanisation of media, as he puts it, means that there is no one place that I, a user, can get my content. This might be good for the artists, because we can get content directly from them. As a consumer of content, it is infuriating. Already, I'm bitter about the fact that I need to subscribe to Netflix, Disney+ and HBO Max to get my content. The idea of paying for my content a-la-carte may mean that I am less likely to be exploratory in my consumption. Eventually, we'd find our way back to some sort of aggregator.\"), \"\\n\", React.createElement(_components.h5, null, \"A framework for companies to work together?\"), \"\\n\", React.createElement(_components.p, null, \"This is where things could get interesting. Companies are currently limited in how they can manage the distribution of their IPs. Licensing, distribution of ownership and revenue splits all get very complicated between companies. The smart contracts of these NFTs could allow two or more companies to collaborate on a piece of art with predetermined rules on profit sharing. Companies would be able to control how they would share earnings at a granular level. This could lead to more of them willing to work together in more complex ways. For example, take Spider-Man: No Way Home. This movie was possible because Sony and Disney were able to collaborate to make it happen. In a world with widespread adoption of NFTs, these companies could create tickets for the movie with the exact breakdown of the profit split. Say Marvel got to keep more money from the movies, and Sony from the toys. If the toys came with NFTs, the breakdown of the profits from each of those could be programmed right into the contract. Now take it one step further. Assuming the actors get royalties from the movie, those could be built into the contracts as well. Right down to which actor gets how much for which toy.\"), \"\\n\", React.createElement(_components.p, null, \"Would such a machinery make companies more likely to collaborate? Possibly. NFTs can manage the arbitration of ownership across stakeholders. This would allow for more complex forms of collaboration to happen. Companies will understand how NFTs work at some point, and when that happens I expect to see more of this. More crossovers, more collaborations, more mash-ups.\"), \"\\n\", React.createElement(_components.p, null, \"I suspect once the implementation of NFTs becomes cheap to the point of being good as free, we'll start seeing it everywhere. All ownership will be tracked by this thing. Some NFTs will still be used for flexing, but the value will come from branding, not from how difficult it was to make. Your toys, your games, your movie tickets, even the clothes you wear could be NFTs. Your Nike shoes might have a digital counterpart you can wear in Fortnite, even though they don't look that good with your Spider-Man avatar.\"), \"\\n\", React.createElement(_components.p, null, \"Right in the title of this post, I said I wouldn't buy an NFT yet. That's still true. I don't care about the flex. But I suspect there will come a point where something that I own will be powered by an NFT and I may not even realise it. We may not even call it an NFT by the time we're done. Once people finish evangelising and demonising the tech in equal measure, we'll focus on whether it's actually useful. It'll make its way into legal agreements and supply chains, becoming a thing of technical infrastructure. The conmen and speculators will move on to the next get rich quick scheme, scamming and getting scammed in equal measure (or maybe not).\"), \"\\n\", React.createElement(_components.p, null, \"And maybe, I'll finally be ready to buy my first NFT.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/parag/Github/personal-website/my-blog-starter/content/blog/what-most-people-nfts/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Container from \"../components/container\";\nconst shortcodes = {\n  Link\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx}, children, location}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"div\", {\n    className: \"w-full max-w-[42rem] m-auto\"\n  }, React.createElement(\"article\", {\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\",\n    className: \"text-sky-700\"\n  }, mdx.frontmatter.title), React.createElement(\"p\", null, React.createElement(\"span\", {\n    className: \"inline-block\"\n  }, mdx.frontmatter.date), mdx.frontmatter.categories ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"rounded inline-block bg-black w-1 h-1 mx-1 mb-0.5\"\n  }), React.createElement(\"span\", {\n    className: \"inline-block\"\n  }, mdx.frontmatter.categories.join([\", \"]))) : null)), React.createElement(MDXProvider, {\n    components: shortcodes,\n    localImages: mdx.frontmatter.embeddedImagesLocal\n  }, children), React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    className: \"flex justify-between font-bold list-none max-w-[42rem] m-auto px-4\"\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.frontmatter.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.frontmatter.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\"))))));\n};\nexport const Head = ({data: {mdx}}) => {\n  return React.createElement(Seo, {\n    title: mdx.frontmatter.title,\n    description: mdx.frontmatter.description || mdx.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        embeddedImagesLocal {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n        categories\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n  }\n`;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Container from \"./container\"\n\nconst Bio = ({ blueBg }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={blueBg ? `bg-sky-700` : \"\"}>\n      <div className=\"bio\">\n        {author?.name && (\n          <p className={`${blueBg ? \"text-white\" : \"text-black\"}`}>\n            Written by {author.name}. {author?.summary || null}\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\n\nfunction Container({ fullWidth, className, children }) {\n  return (\n    <div\n      className={`w-full px-4 lg:px-10 ${\n        fullWidth ? \"\" : \"max-w-[42rem] xl:max-w-[80rem]\"\n      } ${className} m-auto`}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h4","a","h5","ol","li","blockquote","_provideComponents","components","React","href","wrapper","MDXLayout","shortcodes","Link","BlogPostTemplate","_ref","_site$siteMetadata","data","previous","next","site","mdx","children","location","siteTitle","siteMetadata","title","Layout","className","itemScope","itemType","itemProp","frontmatter","date","categories","join","MDXProvider","localImages","embeddedImagesLocal","Bio","to","slug","rel","Head","_ref2","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_data$site$siteMetada","_data$site$siteMetada2","blueBg","useStaticQuery","author","social","name","summary","fullWidth","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}