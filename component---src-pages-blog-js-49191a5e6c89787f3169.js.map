{"version":3,"file":"component---src-pages-blog-js-49191a5e6c89787f3169.js","mappings":"6JA8CA,IAlCYA,IAAiB,IAADC,EAAAC,EAAA,IAAf,OAAEC,GAAQH,EACrB,MAAMI,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBL,EAAGG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBK,OACF,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,GAAtBA,EAAwBO,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAWR,EAAM,aAAkB,IACtCO,EAAAA,cAAA,OAAKC,UAAU,QACZL,aAAM,EAANA,EAAQM,OACPF,EAAAA,cAAA,KAAGC,UAAcR,EAAS,aAAe,cAAgB,cAC3CG,EAAOM,KAAK,MAAGN,aAAM,EAANA,EAAQO,UAAW,OAIhD,C,qCC5BV,IAZA,SAAkBb,GAAsC,IAArC,UAAEc,EAAS,UAAEH,EAAS,SAAEI,GAAUf,EACnD,OACEU,EAAAA,cAAA,OACEC,UAAS,yBACPG,EAAY,GAAK,kCAAgC,IAC/CH,EAAS,WAEZI,EAGP,C,iICkFA,UAtFkBf,IAAwB,IAAAC,EAAA,IAAvB,KAAEG,EAAI,SAAEY,GAAUhB,EACnCiB,QAAQC,IAAI,OAAQd,GACpB,MAAMe,GAAkC,QAAtBlB,EAAAG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBmB,QAAK,QACzCC,EAAQjB,EAAKkB,OAAOC,MAE1B,OAAqB,IAAjBF,EAAMG,OAENd,EAAAA,cAACe,EAAAA,EAAM,CAACT,SAAUA,EAAUI,MAAOD,GACjCT,EAAAA,cAACgB,EAAAA,EAAG,MACJhB,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACe,EAAAA,EAAM,CAACT,SAAUA,EAAUI,MAAOD,GACjCT,EAAAA,cAACiB,EAAAA,EAAS,KACRjB,EAAAA,cAAA,MAAIC,UAAU,mCAAkC,QAChDD,EAAAA,cAAA,KAAGC,UAAU,uBAAsB,2JAKnCD,EAAAA,cAAA,OAAKC,UAAU,+CACZU,EAAMO,KAAI,CAACC,EAAMC,KAChB,MAAMV,EAAQS,EAAKE,YAAYX,OAASS,EAAKE,YAAYC,KAEzD,OACEtB,EAAAA,cAAA,OACEuB,IAAKJ,EAAKE,YAAYC,KACtBrB,UAAU,aACVuB,MAAO,CAAEC,eAAmB,IAAOL,EAAK,MAExCpB,EAAAA,cAAA,WACEC,UAAU,iBACVyB,WAAS,EACTC,SAAS,6BAET3B,EAAAA,cAAA,cACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,QAAMC,UAAU,gBACb,IAAI2B,KAAKT,EAAKE,YAAYQ,MACxBC,eACAC,MAAM,KACNC,MAAM,GACNC,KAAK,MAETd,EAAKE,YAAYa,WAChBlC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,sDACfD,EAAAA,cAAA,QAAMC,UAAU,gBACbkB,EAAKE,YAAYa,WAAWD,KAAK,CAAC,SAGrC,MAENjC,EAAAA,cAAA,MAAIC,UAAU,4BACZD,EAAAA,cAACmC,EAAAA,KAAI,CAACC,GAAE,IAAMjB,EAAKE,YAAYC,KAAQe,SAAS,OAC9CrC,EAAAA,cAAA,MAAIC,UAAU,oBAAoBoC,SAAS,YACxC3B,MAKTV,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEsC,wBAAyB,CACvBC,OAAQpB,EAAKE,YAAYmB,aAAerB,EAAKsB,SAE/CJ,SAAS,kBAIX,MAKP,EAWN,MAAMK,EAAOA,IAAM1C,EAAAA,cAAC2C,EAAAA,EAAG,CAACjC,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/container.js","webpack://gatsby-starter-blog/./src/pages/blog.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Container from \"./container\"\n\nconst Bio = ({ blueBg }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={blueBg ? `bg-sky-700` : \"\"}>\n      <div className=\"bio\">\n        {author?.name && (\n          <p className={`${blueBg ? \"text-white\" : \"text-black\"}`}>\n            Written by {author.name}. {author?.summary || null}\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\n\nfunction Container({ fullWidth, className, children }) {\n  return (\n    <div\n      className={`w-full px-4 lg:px-10 ${\n        fullWidth ? \"\" : \"max-w-[42rem] xl:max-w-[80rem]\"\n      } ${className} m-auto`}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Container from \"../components/container\"\n\nconst BlogIndex = ({ data, location }) => {\n  console.log(\"data\", data)\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Container>\n        <h1 className=\"text-3xl md:text-6xl fade-in-up\">Blog</h1>\n        <p className=\"text-2xl fade-in-up\">\n          Stuff I think about and decide it's coherent enough to share with the\n          world. Mostly things I've learnt through work, life, or a combination\n          of the two.\n        </p>\n        <div className=\"grid grid-cols-2 xl:grid-cols-3 gap-8 py-20\">\n          {posts.map((post, index) => {\n            const title = post.frontmatter.title || post.frontmatter.slug\n\n            return (\n              <div\n                key={post.frontmatter.slug}\n                className=\"fade-in-up\"\n                style={{ animationDelay: `${0.05 * index}s` }}\n              >\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <small>\n                      <span className=\"inline-block\">\n                        {new Date(post.frontmatter.date)\n                          .toDateString()\n                          .split(\" \")\n                          .slice(1)\n                          .join(\" \")}\n                      </span>\n                      {post.frontmatter.categories ? (\n                        <>\n                          <div className=\"rounded inline-block bg-black w-1 h-1 mx-1 mb-0.5\"></div>\n                          <span className=\"inline-block\">\n                            {post.frontmatter.categories.join([\", \"])}\n                          </span>\n                        </>\n                      ) : null}\n                    </small>\n                    <h2 className=\"text-sky-700 text-xl m-0\">\n                      <Link to={`/${post.frontmatter.slug}`} itemProp=\"url\">\n                        <h4 className=\"text-sky-700 my-1\" itemProp=\"headline\">\n                          {title}\n                        </h4>\n                      </Link>\n                    </h2>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </div>\n            )\n          })}\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { post: { eq: \"blog\" } } }\n    ) {\n      nodes {\n        excerpt\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          slug\n          categories\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","_data$site$siteMetada","_data$site$siteMetada2","blueBg","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","fullWidth","children","location","console","log","siteTitle","title","posts","allMdx","nodes","length","Layout","Bio","Container","map","post","index","frontmatter","slug","key","style","animationDelay","itemScope","itemType","Date","date","toDateString","split","slice","join","categories","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}