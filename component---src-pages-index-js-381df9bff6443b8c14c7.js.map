{"version":3,"file":"component---src-pages-index-js-381df9bff6443b8c14c7.js","mappings":"iKA0DA,IA9CYA,IAAiB,IAADC,EAAAC,EAAA,IAAf,OAAEC,GAAQH,EACrB,MAAMI,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBL,EAAGG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBK,OACjCG,EAA+B,QAAzBP,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAWR,EAAM,aAAkB,IACtCO,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAAA,OAAKC,UAAU,aACZL,aAAM,EAANA,EAAQO,OACPH,EAAAA,cAAA,KAAGC,UAAcR,EAAS,aAAe,cAAgB,cAC5CO,EAAAA,cAAA,cAASJ,EAAOO,MAAe,KACzCP,aAAM,EAANA,EAAQQ,UAAW,KAAI,IAExBJ,EAAAA,cAAA,KACEC,WACER,EAAS,aAAe,cAAY,gCAEtCY,KAAI,yBAAyBN,aAAM,EAANA,EAAQO,UAAO,KAC7C,wCAOL,C,qCC5CV,IARA,SAAkBhB,GAAgB,IAAf,SAAEiB,GAAUjB,EAC7B,OACEU,EAAAA,cAAA,OAAKC,UAAU,gDACZM,EAGP,C,iICuEA,UAvEkBjB,IAAwB,IAAAC,EAAA,IAAvB,KAAEG,EAAI,SAAEc,GAAUlB,EACnC,MAAMmB,GAAkC,QAAtBlB,EAAAG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBmB,QAAK,QACzCC,EAAQjB,EAAKkB,OAAOC,MAE1B,OAAqB,IAAjBF,EAAMG,OAENd,EAAAA,cAACe,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjCT,EAAAA,cAACgB,EAAAA,EAAG,MACJhB,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACe,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjCT,EAAAA,cAACgB,EAAAA,EAAG,MACJhB,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAAA,OAAKC,UAAU,6DACZU,EAAMM,KAAIC,IACT,MAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKC,YAAYC,KAEzD,OACEpB,EAAAA,cAAA,OAAKqB,IAAKH,EAAKC,YAAYC,MACzBpB,EAAAA,cAAA,WACEC,UAAU,iBACVqB,WAAS,EACTC,SAAS,6BAETvB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIC,UAAU,+BACZD,EAAAA,cAACwB,EAAAA,KAAI,CAACC,GAAIP,EAAKC,YAAYC,KAAMM,SAAS,OACvChB,IAGLV,EAAAA,cAAA,aACEA,EAAAA,cAAA,QAAMC,UAAU,gBACbiB,EAAKC,YAAYQ,MAEnBT,EAAKC,YAAYS,WAChB5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,sDACfD,EAAAA,cAAA,QAAMC,UAAU,gBACbiB,EAAKC,YAAYS,WAAWC,KAAK,CAAC,SAGrC,OAGR7B,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEC,UAAU,UACV6B,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CP,SAAS,kBAIX,MAKP,EAWN,MAAMQ,EAAOA,IAAMlC,EAAAA,cAACmC,EAAAA,EAAG,CAACzB,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/container.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Container from \"./container\"\n\nconst Bio = ({ blueBg }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={blueBg ? `bg-sky-700` : \"\"}>\n      <Container>\n        <div className=\"bio p-10\">\n          {author?.name && (\n            <p className={`${blueBg ? \"text-white\" : \"text-black\"}`}>\n              Written by <strong>{author.name}</strong>{\" \"}\n              {author?.summary || null}\n              {` `}\n              <a\n                className={`${\n                  blueBg ? \"text-white\" : \"text-black\"\n                } underline underline-offset-4`}\n                href={`https://twitter.com/${social?.twitter || ``}`}\n              >\n                You should follow them on Twitter\n              </a>\n            </p>\n          )}\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\n\nfunction Container({ children }) {\n  return (\n    <div className=\"w-full max-w-[42rem] xl:max-w-[64rem] m-auto\">\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Container from \"../components/container\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <Container>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 gap-8 p-10\">\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.frontmatter.slug\n\n            return (\n              <div key={post.frontmatter.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2 className=\"text-base text-sky-700 mb-0\">\n                      <Link to={post.frontmatter.slug} itemProp=\"url\">\n                        {title}\n                      </Link>\n                    </h2>\n                    <small>\n                      <span className=\"inline-block\">\n                        {post.frontmatter.date}\n                      </span>\n                      {post.frontmatter.categories ? (\n                        <>\n                          <div className=\"rounded inline-block bg-black w-1 h-1 mx-1 mb-0.5\"></div>\n                          <span className=\"inline-block\">\n                            {post.frontmatter.categories.join([\", \"])}\n                          </span>\n                        </>\n                      ) : null}\n                    </small>\n                  </header>\n                  <section>\n                    <p\n                      className=\"text-sm\"\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </div>\n            )\n          })}\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { post: { eq: \"blog\" } } }\n      limit: 6\n    ) {\n      nodes {\n        excerpt\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          slug\n          categories\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","_data$site$siteMetada","_data$site$siteMetada2","blueBg","data","useStaticQuery","author","site","siteMetadata","social","React","className","Container","name","summary","href","twitter","children","location","siteTitle","title","posts","allMdx","nodes","length","Layout","Bio","map","post","frontmatter","slug","key","itemScope","itemType","Link","to","itemProp","date","categories","join","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}