{"version":3,"file":"component---src-templates-portfolio-post-js-content-file-path-content-portfolio-mochi-the-corgi-index-mdx-28158943ea1df35362fb.js","mappings":"wOAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBC,EAAAA,EAAU,CAC7EC,QAAQ,EACRC,oBAAqBX,EAAMY,KAAKC,IAAIC,YAAYH,sBAC9C,KAAMH,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,8NAA+NI,EAAAA,cAAoBP,EAAYI,EAAG,CACpVU,KAAM,0CACL,0BAA2B,6BAChC,CAKA,MAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOU,EAAYT,EAAAA,cAAoBS,EAAWjB,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCCZA,MAAMkB,EAAa,CACjBC,KAAIA,EAAAA,MAEAC,EAAwBC,IAA6D,IAAAC,EAAA,IAA3DV,MAAM,SAACW,EAAQ,KAAEC,EAAI,KAAEC,EAAI,IAAEZ,GAAI,SAAEa,EAAQ,SAAEC,GAASN,EACpF,MAAMO,GAA6B,QAAjBN,EAAAG,EAAKI,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBQ,QAAK,QAC1C,OAAOtB,EAAAA,cAAoBuB,EAAAA,EAAQ,CACjCJ,SAAUA,EACVG,MAAOF,GACNpB,EAAAA,cAAoB,UAAW,CAChCwB,WAAW,EACXC,SAAU,4BACVC,UAAW,QACV1B,EAAAA,cAAoB,MAAO,CAC5B0B,UAAW,wCACV1B,EAAAA,cAAoB,SAAU,KAAMA,EAAAA,cAAoB,KAAM,CAC/D2B,SAAU,YACTtB,EAAIC,YAAYgB,OAAQtB,EAAAA,cAAoB,IAAK,KAAMK,EAAIC,YAAYsB,OAAQ5B,EAAAA,cAAoB6B,EAAAA,GAAa,CACjH9B,WAAYW,EACZoB,YAAazB,EAAIC,YAAYH,qBAC5Be,IAAYlB,EAAAA,cAAoB,MAAOA,EAAAA,cAAoB,SAAU,KAAMA,EAAAA,cAAoB+B,EAAAA,KAAQ/B,EAAAA,cAAoB,MAAO,CACnI0B,UAAW,IACV1B,EAAAA,cAAoB,KAAM,CAC3B0B,UAAW,sEACV1B,EAAAA,cAAoB,KAAM,KAAMe,GAAYf,EAAAA,cAAoBW,EAAAA,KAAM,CACvEqB,GAAIjB,EAAST,YAAY2B,KACzBC,IAAK,QACJ,KAAMnB,EAAST,YAAYgB,QAAStB,EAAAA,cAAoB,KAAM,KAAMgB,GAAQhB,EAAAA,cAAoBW,EAAAA,KAAM,CACvGqB,GAAIhB,EAAKV,YAAY2B,KACrBC,IAAK,QACJlB,EAAKV,YAAYgB,MAAO,SAAS,EAEzBa,EAAOC,IAAmB,IAAjBhC,MAAM,IAACC,IAAK+B,EAChC,OAAOpC,EAAAA,cAAoBqC,EAAAA,EAAK,CAC9Bf,MAAOjB,EAAIC,YAAYgB,MACvBgB,YAAajC,EAAIC,YAAYgC,aAAejC,EAAIkC,SAChD,EAGW,SAASC,EAAiBhD,GACvC,OAAOQ,EAAAA,cAAoBY,EAAuBpB,EAAOQ,EAAAA,cAAoByC,EAAqBjD,GACpG,C","sources":["webpack://gatsby-starter-blog/./content/portfolio/mochi-the-corgi/index.mdx","webpack://gatsby-starter-blog/./src/templates/portfolio-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Carousel} from \"../../../src/components/carousel\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(Carousel, {\n    square: true,\n    embeddedImagesLocal: props.data.mdx.frontmatter.embeddedImagesLocal\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"If it's not obvious already, I love corgis. So I decided to make my own sticker\\npack so I could use it on messaging apps. Sticker sharing in Whatsapp is a\\ncomplicated and generally messy process, but the stickers are \", React.createElement(_components.a, {\n    href: \"https://t.me/addstickers/MochiTheCorgi\"\n  }, \"available on\\nTelegram\"), \" if you want to use them.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/parag/Github/personal-website/my-blog-starter/content/portfolio/mochi-the-corgi/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nconst shortcodes = {\n  Link\n};\nconst PortfolioPostTemplate = ({data: {previous, next, site, mdx}, children, location}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    itemScope: true,\n    itemType: \"http://schema.org/Article\",\n    className: \"px-4\"\n  }, React.createElement(\"div\", {\n    className: \"max-w-[42rem] px-4 m-auto fade-in-up\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, mdx.frontmatter.title), React.createElement(\"p\", null, mdx.frontmatter.date)), React.createElement(MDXProvider, {\n    components: shortcodes,\n    localImages: mdx.frontmatter.embeddedImagesLocal\n  }, children)), React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"\"\n  }, React.createElement(\"ul\", {\n    className: \"flex justify-between font-bold list-none max-w-[42rem] m-auto px-4\"\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.frontmatter.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.frontmatter.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nexport const Head = ({data: {mdx}}) => {\n  return React.createElement(Seo, {\n    title: mdx.frontmatter.title,\n    description: mdx.frontmatter.description || mdx.excerpt\n  });\n};\nPortfolioPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PortfolioPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query PorfolioPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        embeddedImagesLocal {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n      body\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      frontmatter {\n        slug\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","Carousel","square","embeddedImagesLocal","data","mdx","frontmatter","href","wrapper","MDXLayout","shortcodes","Link","PortfolioPostTemplate","_ref","_site$siteMetadata","previous","next","site","children","location","siteTitle","siteMetadata","title","Layout","itemScope","itemType","className","itemProp","date","MDXProvider","localImages","Bio","to","slug","rel","Head","_ref2","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}